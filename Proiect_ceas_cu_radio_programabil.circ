<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.8.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.8.0(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Poke Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="128.0"/>
    <comp lib="0" loc="(1070,130)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(2800,420)" name="Splitter">
      <a name="fanout" val="5"/>
      <a name="incoming" val="5"/>
    </comp>
    <comp lib="0" loc="(2810,660)" name="Splitter">
      <a name="fanout" val="6"/>
      <a name="incoming" val="6"/>
    </comp>
    <comp lib="0" loc="(2860,700)" name="Ground"/>
    <comp lib="0" loc="(2880,470)" name="Ground"/>
    <comp lib="0" loc="(2900,590)" name="Splitter">
      <a name="facing" val="west"/>
      <a name="fanout" val="8"/>
      <a name="incoming" val="8"/>
    </comp>
    <comp lib="0" loc="(2930,360)" name="Splitter">
      <a name="facing" val="west"/>
      <a name="fanout" val="8"/>
      <a name="incoming" val="8"/>
    </comp>
    <comp lib="0" loc="(30,390)" name="Clock"/>
    <comp lib="0" loc="(3460,290)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(3460,440)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(3810,680)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(3980,570)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(830,890)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="6"/>
    </comp>
    <comp lib="5" loc="(100,300)" name="Button">
      <a name="label" val="Ring"/>
    </comp>
    <comp lib="5" loc="(110,140)" name="Button">
      <a name="label" val="Setare_ora"/>
    </comp>
    <comp lib="5" loc="(110,160)" name="Button">
      <a name="label" val="Alarma"/>
    </comp>
    <comp lib="5" loc="(110,180)" name="Button">
      <a name="label" val="Radio"/>
    </comp>
    <comp lib="5" loc="(110,200)" name="Button">
      <a name="label" val="Ok"/>
    </comp>
    <comp lib="5" loc="(2360,380)" name="LED">
      <a name="label" val="Sunet_alarma"/>
    </comp>
    <comp lib="5" loc="(3680,330)" name="7-Segment Display">
      <a name="active" val="false"/>
      <a name="decimalPoint" val="false"/>
    </comp>
    <comp lib="5" loc="(3740,330)" name="7-Segment Display">
      <a name="active" val="false"/>
      <a name="decimalPoint" val="false"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp lib="5" loc="(3870,330)" name="7-Segment Display">
      <a name="active" val="false"/>
      <a name="decimalPoint" val="false"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp lib="5" loc="(390,220)" name="LED">
      <a name="label" val="Pornit"/>
    </comp>
    <comp lib="5" loc="(390,240)" name="LED">
      <a name="label" val="Alarma_set"/>
    </comp>
    <comp lib="5" loc="(3930,330)" name="7-Segment Display">
      <a name="active" val="false"/>
      <a name="decimalPoint" val="false"/>
    </comp>
    <comp lib="5" loc="(420,100)" name="LED">
      <a name="label" val="Radio_sunet"/>
    </comp>
    <comp lib="5" loc="(60,240)" name="Button">
      <a name="label" val="Ora"/>
    </comp>
    <comp lib="5" loc="(60,260)" name="Button">
      <a name="label" val="Min"/>
    </comp>
    <comp lib="5" loc="(70,120)" name="Button">
      <a name="label" val="Oprire"/>
    </comp>
    <comp lib="5" loc="(90,100)" name="Button">
      <a name="label" val="Pornire"/>
    </comp>
    <comp lib="5" loc="(90,220)" name="Button">
      <a name="label" val="Reset"/>
    </comp>
    <comp loc="(1050,130)" name="Numarator_60">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="Num_60_alarma"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp loc="(1060,230)" name="Numarator_24">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="Num_24_alarma"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp loc="(1070,480)" name="Numarator_60">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1070,590)" name="Numarator_24">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="Num_24_ora"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp loc="(110,700)" name="Poarta_sau">
      <a name="appearance" val="logisim_evolution"/>
      <a name="facing" val="south"/>
    </comp>
    <comp loc="(1640,220)" name="Registru_5biti">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1650,120)" name="Registru_6biti">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(200,1080)" name="poarta_nu">
      <a name="appearance" val="logisim_evolution"/>
      <a name="facing" val="west"/>
    </comp>
    <comp loc="(2030,360)" name="comp_6b">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(2030,450)" name="comp_5b">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(2350,380)" name="Poarta_si">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(2800,420)" name="Mux_2_la_1_5b">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(2810,660)" name="Mux_2_la_1_6b">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(3170,360)" name="convertor">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(3200,590)" name="convertor">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(340,100)" name="unitate_centrala">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(340,960)" name="Poarta_si">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(3450,350)" name="hex2_7seg">
      <a name="appearance" val="logisim_evolution"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp loc="(3460,440)" name="hex2_7seg">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(3510,580)" name="hex2_7seg">
      <a name="appearance" val="logisim_evolution"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp loc="(3510,680)" name="hex2_7seg">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(410,800)" name="Poarta_sau">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(490,670)" name="Poarta_sau">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(520,550)" name="Poarta_sau">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(750,780)" name="Poarta_sau">
      <a name="appearance" val="logisim_evolution"/>
      <a name="facing" val="west"/>
    </comp>
    <comp loc="(760,870)" name="num_secunde">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(830,440)" name="Poarta_sau">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <wire from="(100,300)" to="(120,300)"/>
    <wire from="(100,920)" to="(100,960)"/>
    <wire from="(100,920)" to="(150,920)"/>
    <wire from="(100,960)" to="(120,960)"/>
    <wire from="(1020,700)" to="(1020,760)"/>
    <wire from="(1050,130)" to="(1070,130)"/>
    <wire from="(1050,150)" to="(1120,150)"/>
    <wire from="(1060,230)" to="(1230,230)"/>
    <wire from="(1070,480)" to="(1090,480)"/>
    <wire from="(1070,500)" to="(1120,500)"/>
    <wire from="(1070,590)" to="(1290,590)"/>
    <wire from="(1090,480)" to="(1090,780)"/>
    <wire from="(110,140)" to="(120,140)"/>
    <wire from="(110,160)" to="(120,160)"/>
    <wire from="(110,180)" to="(120,180)"/>
    <wire from="(110,200)" to="(120,200)"/>
    <wire from="(110,220)" to="(110,450)"/>
    <wire from="(110,220)" to="(120,220)"/>
    <wire from="(110,450)" to="(110,480)"/>
    <wire from="(110,450)" to="(550,450)"/>
    <wire from="(110,700)" to="(110,800)"/>
    <wire from="(110,800)" to="(190,800)"/>
    <wire from="(1120,130)" to="(1120,150)"/>
    <wire from="(1120,130)" to="(1230,130)"/>
    <wire from="(1120,480)" to="(1120,500)"/>
    <wire from="(1120,480)" to="(1180,480)"/>
    <wire from="(1180,480)" to="(1180,680)"/>
    <wire from="(1180,480)" to="(1480,480)"/>
    <wire from="(1180,680)" to="(2590,680)"/>
    <wire from="(1230,130)" to="(1300,130)"/>
    <wire from="(1230,230)" to="(1230,300)"/>
    <wire from="(1230,230)" to="(1280,230)"/>
    <wire from="(1230,300)" to="(2530,300)"/>
    <wire from="(1230,60)" to="(1230,130)"/>
    <wire from="(1230,60)" to="(2500,60)"/>
    <wire from="(1280,230)" to="(1280,260)"/>
    <wire from="(1280,260)" to="(1420,260)"/>
    <wire from="(1290,590)" to="(1290,720)"/>
    <wire from="(1290,590)" to="(1660,590)"/>
    <wire from="(1290,720)" to="(2530,720)"/>
    <wire from="(1300,130)" to="(1300,160)"/>
    <wire from="(1300,160)" to="(1430,160)"/>
    <wire from="(1330,220)" to="(1330,330)"/>
    <wire from="(1330,220)" to="(1350,220)"/>
    <wire from="(1330,370)" to="(1330,570)"/>
    <wire from="(1330,570)" to="(2430,570)"/>
    <wire from="(1350,120)" to="(1350,220)"/>
    <wire from="(1350,120)" to="(1430,120)"/>
    <wire from="(1350,220)" to="(1420,220)"/>
    <wire from="(1380,140)" to="(1380,240)"/>
    <wire from="(1380,140)" to="(1430,140)"/>
    <wire from="(1380,240)" to="(1420,240)"/>
    <wire from="(1380,40)" to="(1380,140)"/>
    <wire from="(1390,410)" to="(1390,530)"/>
    <wire from="(1390,530)" to="(2110,530)"/>
    <wire from="(1480,380)" to="(1480,480)"/>
    <wire from="(1480,380)" to="(1810,380)"/>
    <wire from="(150,400)" to="(150,920)"/>
    <wire from="(150,400)" to="(360,400)"/>
    <wire from="(1640,220)" to="(1750,220)"/>
    <wire from="(1650,120)" to="(1770,120)"/>
    <wire from="(1660,470)" to="(1660,590)"/>
    <wire from="(1660,470)" to="(1810,470)"/>
    <wire from="(1750,220)" to="(1750,450)"/>
    <wire from="(1750,450)" to="(1810,450)"/>
    <wire from="(1770,120)" to="(1770,360)"/>
    <wire from="(1770,360)" to="(1810,360)"/>
    <wire from="(190,550)" to="(190,770)"/>
    <wire from="(190,550)" to="(270,550)"/>
    <wire from="(190,770)" to="(520,770)"/>
    <wire from="(2030,360)" to="(2070,360)"/>
    <wire from="(2030,450)" to="(2070,450)"/>
    <wire from="(2070,360)" to="(2070,380)"/>
    <wire from="(2070,380)" to="(2130,380)"/>
    <wire from="(2070,400)" to="(2070,450)"/>
    <wire from="(2070,400)" to="(2130,400)"/>
    <wire from="(2110,420)" to="(2110,530)"/>
    <wire from="(2110,420)" to="(2130,420)"/>
    <wire from="(220,570)" to="(220,690)"/>
    <wire from="(220,570)" to="(300,570)"/>
    <wire from="(220,690)" to="(260,690)"/>
    <wire from="(2350,380)" to="(2360,380)"/>
    <wire from="(2430,460)" to="(2430,570)"/>
    <wire from="(2430,460)" to="(2580,460)"/>
    <wire from="(2430,570)" to="(2430,700)"/>
    <wire from="(2430,700)" to="(2590,700)"/>
    <wire from="(2500,60)" to="(2500,660)"/>
    <wire from="(2500,660)" to="(2590,660)"/>
    <wire from="(2530,300)" to="(2530,420)"/>
    <wire from="(2530,420)" to="(2580,420)"/>
    <wire from="(2530,440)" to="(2530,720)"/>
    <wire from="(2530,440)" to="(2580,440)"/>
    <wire from="(260,650)" to="(260,670)"/>
    <wire from="(260,650)" to="(490,650)"/>
    <wire from="(260,670)" to="(270,670)"/>
    <wire from="(260,690)" to="(260,740)"/>
    <wire from="(260,690)" to="(270,690)"/>
    <wire from="(260,740)" to="(570,740)"/>
    <wire from="(270,500)" to="(270,550)"/>
    <wire from="(270,500)" to="(450,500)"/>
    <wire from="(270,550)" to="(300,550)"/>
    <wire from="(2820,370)" to="(2910,370)"/>
    <wire from="(2820,380)" to="(2910,380)"/>
    <wire from="(2820,390)" to="(2910,390)"/>
    <wire from="(2820,400)" to="(2910,400)"/>
    <wire from="(2820,410)" to="(2910,410)"/>
    <wire from="(2830,600)" to="(2880,600)"/>
    <wire from="(2830,610)" to="(2880,610)"/>
    <wire from="(2830,620)" to="(2880,620)"/>
    <wire from="(2830,630)" to="(2880,630)"/>
    <wire from="(2830,640)" to="(2880,640)"/>
    <wire from="(2830,650)" to="(2880,650)"/>
    <wire from="(2860,660)" to="(2860,670)"/>
    <wire from="(2860,660)" to="(2880,660)"/>
    <wire from="(2860,670)" to="(2860,700)"/>
    <wire from="(2860,670)" to="(2880,670)"/>
    <wire from="(2880,420)" to="(2880,430)"/>
    <wire from="(2880,420)" to="(2910,420)"/>
    <wire from="(2880,430)" to="(2880,440)"/>
    <wire from="(2880,430)" to="(2910,430)"/>
    <wire from="(2880,440)" to="(2880,470)"/>
    <wire from="(2880,440)" to="(2910,440)"/>
    <wire from="(2900,590)" to="(2980,590)"/>
    <wire from="(2930,360)" to="(2950,360)"/>
    <wire from="(30,390)" to="(60,390)"/>
    <wire from="(3170,360)" to="(3230,360)"/>
    <wire from="(3170,380)" to="(3240,380)"/>
    <wire from="(3200,590)" to="(3290,590)"/>
    <wire from="(3200,610)" to="(3290,610)"/>
    <wire from="(3230,350)" to="(3230,360)"/>
    <wire from="(3240,380)" to="(3240,440)"/>
    <wire from="(3290,580)" to="(3290,590)"/>
    <wire from="(3290,610)" to="(3290,680)"/>
    <wire from="(340,100)" to="(420,100)"/>
    <wire from="(340,120)" to="(510,120)"/>
    <wire from="(340,140)" to="(450,140)"/>
    <wire from="(340,160)" to="(470,160)"/>
    <wire from="(340,180)" to="(440,180)"/>
    <wire from="(340,200)" to="(420,200)"/>
    <wire from="(340,220)" to="(360,220)"/>
    <wire from="(340,240)" to="(370,240)"/>
    <wire from="(340,870)" to="(340,960)"/>
    <wire from="(340,870)" to="(540,870)"/>
    <wire from="(3450,350)" to="(3460,350)"/>
    <wire from="(3460,290)" to="(3460,350)"/>
    <wire from="(3480,220)" to="(3740,220)"/>
    <wire from="(3480,230)" to="(3750,230)"/>
    <wire from="(3480,240)" to="(3790,240)"/>
    <wire from="(3480,250)" to="(3800,250)"/>
    <wire from="(3480,260)" to="(3810,260)"/>
    <wire from="(3480,270)" to="(3770,270)"/>
    <wire from="(3480,280)" to="(3760,280)"/>
    <wire from="(3480,290)" to="(3480,370)"/>
    <wire from="(3480,290)" to="(3680,290)"/>
    <wire from="(3480,380)" to="(3490,380)"/>
    <wire from="(3480,390)" to="(3670,390)"/>
    <wire from="(3480,400)" to="(3660,400)"/>
    <wire from="(3480,410)" to="(3650,410)"/>
    <wire from="(3480,420)" to="(3510,420)"/>
    <wire from="(3480,430)" to="(3640,430)"/>
    <wire from="(3490,300)" to="(3490,380)"/>
    <wire from="(3490,300)" to="(3690,300)"/>
    <wire from="(3510,310)" to="(3510,420)"/>
    <wire from="(3510,310)" to="(3710,310)"/>
    <wire from="(3510,580)" to="(3800,580)"/>
    <wire from="(3510,680)" to="(3810,680)"/>
    <wire from="(360,220)" to="(360,400)"/>
    <wire from="(360,220)" to="(390,220)"/>
    <wire from="(3640,320)" to="(3640,430)"/>
    <wire from="(3640,320)" to="(3700,320)"/>
    <wire from="(3650,410)" to="(3650,420)"/>
    <wire from="(3650,420)" to="(3700,420)"/>
    <wire from="(3660,400)" to="(3660,410)"/>
    <wire from="(3660,410)" to="(3690,410)"/>
    <wire from="(3670,390)" to="(3670,400)"/>
    <wire from="(3670,400)" to="(3680,400)"/>
    <wire from="(3680,290)" to="(3680,330)"/>
    <wire from="(3680,390)" to="(3680,400)"/>
    <wire from="(3690,300)" to="(3690,330)"/>
    <wire from="(3690,390)" to="(3690,410)"/>
    <wire from="(370,240)" to="(370,410)"/>
    <wire from="(370,240)" to="(390,240)"/>
    <wire from="(370,410)" to="(1390,410)"/>
    <wire from="(3700,320)" to="(3700,330)"/>
    <wire from="(3700,390)" to="(3700,420)"/>
    <wire from="(3710,310)" to="(3710,330)"/>
    <wire from="(3740,220)" to="(3740,330)"/>
    <wire from="(3740,390)" to="(3740,420)"/>
    <wire from="(3740,420)" to="(3790,420)"/>
    <wire from="(3750,230)" to="(3750,330)"/>
    <wire from="(3750,390)" to="(3750,410)"/>
    <wire from="(3750,410)" to="(3800,410)"/>
    <wire from="(3760,280)" to="(3760,330)"/>
    <wire from="(3760,390)" to="(3760,430)"/>
    <wire from="(3760,430)" to="(3810,430)"/>
    <wire from="(3770,270)" to="(3770,330)"/>
    <wire from="(3790,240)" to="(3790,420)"/>
    <wire from="(3800,250)" to="(3800,410)"/>
    <wire from="(3800,570)" to="(3800,580)"/>
    <wire from="(3800,570)" to="(3980,570)"/>
    <wire from="(3810,260)" to="(3810,430)"/>
    <wire from="(3830,310)" to="(3830,610)"/>
    <wire from="(3830,310)" to="(3870,310)"/>
    <wire from="(3830,620)" to="(3840,620)"/>
    <wire from="(3830,630)" to="(3870,630)"/>
    <wire from="(3830,640)" to="(3880,640)"/>
    <wire from="(3830,650)" to="(3890,650)"/>
    <wire from="(3830,660)" to="(3920,660)"/>
    <wire from="(3830,670)" to="(3850,670)"/>
    <wire from="(3840,320)" to="(3840,620)"/>
    <wire from="(3840,320)" to="(3880,320)"/>
    <wire from="(3850,290)" to="(3850,670)"/>
    <wire from="(3850,290)" to="(3890,290)"/>
    <wire from="(3870,310)" to="(3870,330)"/>
    <wire from="(3870,390)" to="(3870,630)"/>
    <wire from="(3880,320)" to="(3880,330)"/>
    <wire from="(3880,390)" to="(3880,640)"/>
    <wire from="(3890,290)" to="(3890,330)"/>
    <wire from="(3890,390)" to="(3890,650)"/>
    <wire from="(3900,320)" to="(3900,330)"/>
    <wire from="(3900,320)" to="(3920,320)"/>
    <wire from="(3920,320)" to="(3920,660)"/>
    <wire from="(3930,290)" to="(3930,330)"/>
    <wire from="(3930,290)" to="(4000,290)"/>
    <wire from="(3930,390)" to="(3930,490)"/>
    <wire from="(3930,490)" to="(4040,490)"/>
    <wire from="(3940,300)" to="(3940,330)"/>
    <wire from="(3940,300)" to="(4020,300)"/>
    <wire from="(3940,390)" to="(3940,480)"/>
    <wire from="(3940,480)" to="(4050,480)"/>
    <wire from="(3950,310)" to="(3950,330)"/>
    <wire from="(3950,310)" to="(4080,310)"/>
    <wire from="(3950,390)" to="(3950,470)"/>
    <wire from="(3950,470)" to="(4060,470)"/>
    <wire from="(3960,320)" to="(3960,330)"/>
    <wire from="(3960,320)" to="(4070,320)"/>
    <wire from="(4000,290)" to="(4000,500)"/>
    <wire from="(4000,510)" to="(4020,510)"/>
    <wire from="(4000,520)" to="(4040,520)"/>
    <wire from="(4000,530)" to="(4050,530)"/>
    <wire from="(4000,540)" to="(4060,540)"/>
    <wire from="(4000,550)" to="(4070,550)"/>
    <wire from="(4000,560)" to="(4080,560)"/>
    <wire from="(4020,300)" to="(4020,510)"/>
    <wire from="(4040,490)" to="(4040,520)"/>
    <wire from="(4050,480)" to="(4050,530)"/>
    <wire from="(4060,470)" to="(4060,540)"/>
    <wire from="(4070,320)" to="(4070,550)"/>
    <wire from="(4080,310)" to="(4080,560)"/>
    <wire from="(410,800)" to="(500,800)"/>
    <wire from="(420,1080)" to="(450,1080)"/>
    <wire from="(420,200)" to="(420,220)"/>
    <wire from="(420,220)" to="(650,220)"/>
    <wire from="(440,180)" to="(440,200)"/>
    <wire from="(440,200)" to="(660,200)"/>
    <wire from="(450,1080)" to="(720,1080)"/>
    <wire from="(450,140)" to="(450,500)"/>
    <wire from="(450,900)" to="(450,1080)"/>
    <wire from="(470,160)" to="(470,180)"/>
    <wire from="(470,180)" to="(490,180)"/>
    <wire from="(490,130)" to="(490,180)"/>
    <wire from="(490,130)" to="(830,130)"/>
    <wire from="(490,180)" to="(490,440)"/>
    <wire from="(490,440)" to="(490,650)"/>
    <wire from="(490,440)" to="(610,440)"/>
    <wire from="(490,670)" to="(590,670)"/>
    <wire from="(500,800)" to="(500,890)"/>
    <wire from="(500,890)" to="(540,890)"/>
    <wire from="(510,120)" to="(510,170)"/>
    <wire from="(510,170)" to="(730,170)"/>
    <wire from="(520,550)" to="(820,550)"/>
    <wire from="(520,770)" to="(520,830)"/>
    <wire from="(520,830)" to="(720,830)"/>
    <wire from="(550,330)" to="(550,450)"/>
    <wire from="(550,330)" to="(810,330)"/>
    <wire from="(550,450)" to="(550,500)"/>
    <wire from="(550,500)" to="(550,610)"/>
    <wire from="(550,500)" to="(850,500)"/>
    <wire from="(550,610)" to="(850,610)"/>
    <wire from="(570,740)" to="(570,850)"/>
    <wire from="(570,850)" to="(770,850)"/>
    <wire from="(590,460)" to="(590,670)"/>
    <wire from="(590,460)" to="(610,460)"/>
    <wire from="(60,240)" to="(120,240)"/>
    <wire from="(60,260)" to="(120,260)"/>
    <wire from="(60,280)" to="(120,280)"/>
    <wire from="(60,280)" to="(60,390)"/>
    <wire from="(60,390)" to="(60,980)"/>
    <wire from="(60,980)" to="(120,980)"/>
    <wire from="(650,40)" to="(1380,40)"/>
    <wire from="(650,40)" to="(650,220)"/>
    <wire from="(660,200)" to="(660,300)"/>
    <wire from="(660,200)" to="(700,200)"/>
    <wire from="(660,300)" to="(740,300)"/>
    <wire from="(660,590)" to="(660,780)"/>
    <wire from="(660,590)" to="(850,590)"/>
    <wire from="(660,780)" to="(750,780)"/>
    <wire from="(70,120)" to="(80,120)"/>
    <wire from="(70,140)" to="(70,480)"/>
    <wire from="(70,140)" to="(80,140)"/>
    <wire from="(70,480)" to="(90,480)"/>
    <wire from="(700,200)" to="(700,230)"/>
    <wire from="(700,230)" to="(840,230)"/>
    <wire from="(720,830)" to="(720,1080)"/>
    <wire from="(730,170)" to="(730,270)"/>
    <wire from="(730,170)" to="(830,170)"/>
    <wire from="(730,270)" to="(830,270)"/>
    <wire from="(740,300)" to="(740,700)"/>
    <wire from="(740,700)" to="(1020,700)"/>
    <wire from="(760,870)" to="(770,870)"/>
    <wire from="(760,890)" to="(830,890)"/>
    <wire from="(770,850)" to="(770,870)"/>
    <wire from="(80,120)" to="(120,120)"/>
    <wire from="(80,120)" to="(80,140)"/>
    <wire from="(810,150)" to="(810,250)"/>
    <wire from="(810,150)" to="(830,150)"/>
    <wire from="(810,250)" to="(810,330)"/>
    <wire from="(810,250)" to="(840,250)"/>
    <wire from="(810,330)" to="(1330,330)"/>
    <wire from="(820,520)" to="(820,550)"/>
    <wire from="(820,520)" to="(850,520)"/>
    <wire from="(820,550)" to="(820,630)"/>
    <wire from="(820,630)" to="(850,630)"/>
    <wire from="(830,270)" to="(830,370)"/>
    <wire from="(830,270)" to="(840,270)"/>
    <wire from="(830,370)" to="(1330,370)"/>
    <wire from="(830,440)" to="(850,440)"/>
    <wire from="(850,440)" to="(850,480)"/>
    <wire from="(90,100)" to="(120,100)"/>
    <wire from="(90,1000)" to="(120,1000)"/>
    <wire from="(90,1000)" to="(90,1080)"/>
    <wire from="(90,1080)" to="(200,1080)"/>
    <wire from="(90,220)" to="(110,220)"/>
    <wire from="(90,820)" to="(190,820)"/>
    <wire from="(90,820)" to="(90,900)"/>
    <wire from="(90,900)" to="(450,900)"/>
    <wire from="(970,760)" to="(1020,760)"/>
    <wire from="(970,780)" to="(1090,780)"/>
  </circuit>
  <vhdl name="Numarator_24">--------------------------------------------------------------------------------&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
USE ieee.numeric_std.ALL;&#13;

ENTITY Numarator_24 IS&#13;
  PORT (&#13;
  		clk: in std_logic;
        	reset: in std_logic;
        	enable_24: in std_logic;
        	out_24: out std_logic_vector(4 downto 0)
    );&#13;
END Numarator_24;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE TypeArchitecture OF Numarator_24 IS&#13;
&#13;
signal count: std_logic_vector(4 downto 0) := (others =&gt; '0');

BEGIN&#13;
&#13;process (clk, reset)
    begin
        if reset = '1' then
            count &lt;= "00000";
        
        elsif rising_edge(clk) and enable_24 = '1' then
            if count = "10111" then
                count &lt;= "00000";
            else
                count &lt;= std_logic_vector(unsigned(count) + 1);
            end if;
        end if;
    end process;

out_24 &lt;= std_logic_vector(count);
&#13;
END TypeArchitecture;&#13;
</vhdl>
  <vhdl name="Numarator_60">--------------------------------------------------------------------------------&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
USE ieee.numeric_std.all;

ENTITY Numarator_60 IS&#13;
  PORT (&#13;
  		clk: in std_logic;
        	reset: in std_logic;
        	enable_60: in std_logic;
        	enable_24: out std_logic;
        	out_60: out std_logic_vector(5 downto 0)
    );&#13;
END Numarator_60;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE TypeArchitecture OF Numarator_60 IS&#13;
&#13;
SIGNAL count : STD_LOGIC_VECTOR(5 DOWNTO 0) := (OTHERS =&gt; '0');
signal en_aux : std_logic := '0';

BEGIN&#13;
	
	process (clk, reset)
    	begin
&#13; 		if reset = '1' then
         		count &lt;= "000000";
      		en_aux &lt;= '0';
        	
        	elsif rising_edge(clk) and enable_60 = '1' then
          	if count = "111011" then
               	 count &lt;= "000000";
               	 en_aux &lt;= '1';
               	 
            	else
               	 count &lt;= std_logic_vector(unsigned(count) + 1);
               	 en_aux &lt;= '0';
            	end if;
        	end if;
    end process;

enable_24 &lt;= en_aux;
out_60 &lt;= count;
&#13;
END TypeArchitecture;&#13;
</vhdl>
  <vhdl name="Registru_5biti">--------------------------------------------------------------------------------&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
use ieee.numeric_std.all;&#13;
use ieee.numeric_std_unsigned.all;

ENTITY Registru_5biti IS&#13;
  PORT (&#13;
        	reset: in std_logic;
        	clk: in std_logic;
        	in_5: in std_logic_vector(4 downto 0);
	     out_5: out std_logic_vector(4 downto 0)
    );&#13;
END Registru_5biti;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE TypeArchitecture OF Registru_5biti IS&#13;
&#13;
signal reg: std_logic_vector(4 downto 0) := (others =&gt; '0');

BEGIN&#13;

	process (clk, reset)
    		begin
        		if reset = '1' then
            		reg &lt;= "00000";
        		elsif rising_edge(clk) then
                	reg &lt;= in_5;
        		end if;
    end process;

    out_5 &lt;= reg;
&#13;
END TypeArchitecture;&#13;
</vhdl>
  <vhdl name="Registru_6biti">--------------------------------------------------------------------------------&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
use ieee.numeric_std.all;&#13;
use ieee.numeric_std_unsigned.all;

ENTITY Registru_6biti IS&#13;
  PORT (&#13;
  		reset: in std_logic;
        	clk: in std_logic;
        	in_6: in std_logic_vector(5 downto 0);
	     out_6: out std_logic_vector(5 downto 0)
    );&#13;
END Registru_6biti;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE TypeArchitecture OF Registru_6biti IS&#13;
&#13;
signal reg: std_logic_vector(5 downto 0) := (others =&gt; '0');

BEGIN&#13;

	process (clk, reset)
    		begin
        		if reset = '1' then
            		reg &lt;= "000000";
        		elsif rising_edge(clk) then
                	reg &lt;= std_logic_vector(unsigned(in_6) + 1);
        		end if;
    end process;

    out_6 &lt;= reg;&#13;
&#13;
END TypeArchitecture;&#13;
</vhdl>
  <vhdl name="div_frecv">--------------------------------------------------------------------------------&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
USE ieee.std_logic_unsigned.all;
&#13;
ENTITY div_frecv IS&#13;
  PORT (&#13;
    clock      : IN  std_logic;
    div_clk    : OUT std_logic
    );&#13;
END div_frecv;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE TypeArchitecture OF div_frecv IS&#13;
&#13;
signal tmp:std_logic_vector (6 downto 0):=(others =&gt;'0');

BEGIN&#13;
&#13;
process(clock)
begin
	if(rising_edge(clock)) then
		if tmp = ("1100011") then 
				tmp &lt;= "0000000";
			elsif (tmp &lt;= "0110001")&#13; then
				tmp &lt;= tmp + 1;
				div_clk &lt;= '0';
			else div_clk &lt;= '1';
				tmp &lt;= tmp + 1;
		end if;
	end if;	
end process;

END TypeArchitecture;&#13;
</vhdl>
  <vhdl name="comp_5b">--------------------------------------------------------------------------------&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY comp_5b IS&#13;
  PORT (&#13;
  	in1_5b, in2_5b : in std_logic_vector(4 downto 0);
  	cmp_5b : out std_logic
    );&#13;
END comp_5b;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE TypeArchitecture OF comp_5b IS&#13;
&#13;
BEGIN&#13;
&#13;
	cmp_5b &lt;= '1' when in1_5b = in2_5b else '0';
&#13;
END TypeArchitecture;&#13;
</vhdl>
  <vhdl name="comp_6b">--------------------------------------------------------------------------------&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY comp_6b IS&#13;
  PORT (&#13;
  	in1_6b, in2_6b : in std_logic_vector(5 downto 0);
  	cmp_6b : out std_logic
    );&#13;
END comp_6b;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE TypeArchitecture OF comp_6b IS&#13;
&#13;
BEGIN&#13;
&#13;
	cmp_6b &lt;= '1' when in1_6b = in2_6b else '0';
&#13;
END TypeArchitecture;&#13;
</vhdl>
  <vhdl name="unitate_centrala">--------------------------------------------------------------------------------&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY unitate_centrala IS&#13;
  PORT (&#13;
  	pornire, oprire, setare_ora, alarma, radio, ok, reset, ora, minut, clk, ring : in std_logic;
  	led_radio, en_set_al, en_set_ora, cresc_60, cresc_24, ok_set_al, led_on, alarma_set: out std_logic
    );&#13;
END unitate_centrala;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE TypeArchitecture OF unitate_centrala IS&#13;

type STATE_T is (Off, Idle, State_set_al, State_set_hour);
signal STATE, NXSTATE: STATE_T;
signal aux_radio : std_logic := '0';
signal aux_alarma : std_logic := '0';

BEGIN&#13;
&#13;
UPDATE_STATE: process (Reset, Clk)
			begin
				if (reset = '1') then
					STATE &lt;= Off;
				elsif clk'EVENT and clk = '1' then
					STATE &lt;= NXSTATE;
				end if;
			end process UPDATE_STATE;


TRANSITIONS: process (STATE, oprire, pornire, setare_ora, alarma, ok)
			begin
				case STATE is
					when Off =&gt; 	if pornire = '1' then NXSTATE&lt;=Idle;
								else NXSTATE &lt;= Off;
								end if;
								
					when Idle =&gt; 	if oprire = '1' then NXSTATE &lt;= Off;
								elsif setare_ora = '1' then
								NXSTATE &lt;= State_set_hour;
								elsif alarma = '1' then
                    				NXSTATE &lt;= State_set_al;
								else
                    				NXSTATE &lt;= Idle;
                					end if;
                					
					when State_set_hour =&gt; 	if ok = '1' then
                    						NXSTATE &lt;= Idle;
                							else
                    						NXSTATE &lt;= State_set_hour;
                							end if;			

					when State_set_al =&gt; 	if ok = '1' then
										NXSTATE &lt;= Idle;
										else
										NXSTATE &lt;= State_set_al;
										end if;
				end case;
			end process TRANSITIONS;


Outputs: process (STATE, pornire, oprire, setare_ora, alarma, ok, radio, ora, minut, ring)
		begin
			case STATE is
			
				when Off =&gt; 	led_on &lt;= '0';
							led_radio &lt;= '0';
							en_set_al &lt;= '0';
							en_set_ora &lt;= '0';
							cresc_60 &lt;= '0';
							cresc_24 &lt;= '0';
							ok_set_al &lt;= '0';
							aux_alarma &lt;= '0';
							aux_radio &lt;= '0';
							alarma_set &lt;= '0';
							
				when Idle =&gt; 	led_on &lt;= '1';
							en_set_al &lt;= '0';
							en_set_ora &lt;= '0';
							if radio = '1' then
                					if aux_radio = '0' then
                    					aux_radio &lt;= '1';
                					else
                    					aux_radio &lt;= '0';
								end if;
							end if;
							led_radio &lt;= aux_radio;
							if ring = '1' then
								if aux_alarma = '0' then
                    					aux_alarma &lt;= '1';
                					else
                    					aux_alarma &lt;= '0';
								end if;
							end if;
							alarma_set &lt;= aux_alarma;	
								
							
				when State_set_hour =&gt; 	en_set_ora &lt;= '1';
				
									if ora = '1' then
										cresc_24 &lt;= '1';
									else
										cresc_24 &lt;= '0';
									end if;
									if minut = '1' then
										cresc_60 &lt;= '1';
									else
										cresc_60 &lt;= '0';
									end if;
									
				when State_set_al =&gt;	en_set_al &lt;= '1';
									if ora = '1' then
										cresc_24 &lt;= '1';
										ok_set_al &lt;= '1';
									else
										cresc_24 &lt;= '0';
										ok_set_al &lt;= '0';
									end if;
									if minut = '1' then
										cresc_60 &lt;= '1';
										ok_set_al &lt;= '1';
									else
										cresc_60 &lt;= '0';
										ok_set_al &lt;= '0';
									end if;						
				
			end case;
		end process Outputs;
		
END TypeArchitecture;&#13;
</vhdl>
  <vhdl name="hex2_7seg">--------------------------------------------------------------------------------&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY hex2_7seg IS&#13;
  PORT (&#13;
  	hex_in : in std_logic_vector(3 downto 0);
  	a_b_c_d_e_f_g : out std_logic_vector(6 downto 0)
    );&#13;
END hex2_7seg;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE TypeArchitecture OF hex2_7seg IS&#13;
&#13;
BEGIN&#13;
&#13;
a_b_c_d_e_f_g &lt;=   "0000001" when hex_in = x"0" else
                   "1001111" when hex_in = x"1" else
                   "0010010" when hex_in = x"2" else
                   "0000110" when hex_in = x"3" else
                   "1001100" when hex_in = x"4" else
                   "0100100" when hex_in = x"5" else
                   "0100000" when hex_in = x"6" else
                   "0001111" when hex_in = x"7" else
                   "0000000" when hex_in = x"8" else
                   "0000100" when hex_in = x"9" else
                   "0001000" when hex_in = x"A" else
                   "1100000" when hex_in = x"B" else
                   "0110000" when hex_in = x"C" else
                   "1000010" when hex_in = x"D" else 
                   "0110000" when hex_in = x"E" else
                   "0111000" when hex_in = x"F" else
                   "1111111";
&#13;
END TypeArchitecture;&#13;
</vhdl>
  <vhdl name="Poarta_si">--------------------------------------------------------------------------------&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY Poarta_si IS&#13;
  PORT (&#13;
  	in1, in2, in3: in std_logic;
  	si_out : out std_logic
    );&#13;
END Poarta_si;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE TypeArchitecture OF Poarta_si IS&#13;
&#13;
BEGIN&#13;
&#13;
si_out &lt;= in1 AND in2 AND in3;
&#13;
END TypeArchitecture;&#13;
</vhdl>
  <vhdl name="convertor">--------------------------------------------------------------------------------&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;
USE ieee.std_logic_arith.all;

ENTITY convertor IS&#13;
  PORT (&#13;
  		Bin_num: in std_logic_vector(7 downto 0);
  		Unit: out std_logic_vector(3 downto 0);
  		Decimal: out std_logic_vector(3 downto 0)  
    );&#13;
END convertor;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE TypeArchitecture OF convertor IS&#13;
&#13;
signal num_int: integer:=0;
signal u,z: integer:=0;

BEGIN


	num_int&lt;=conv_integer(bin_num);
	z&lt;=num_int / 10;
	u&lt;=num_int rem 10;
	process(u)
	begin
		case u is
		when 0 =&gt; unit &lt;= x"0";
		when 1 =&gt; unit &lt;= x"1";
		when 2 =&gt; unit &lt;= x"2";
		when 3 =&gt; unit &lt;= x"3";
		when 4 =&gt; unit &lt;= x"4";
		when 5 =&gt; unit &lt;= x"5";
		when 6 =&gt; unit &lt;= x"6";
		when 7 =&gt; unit &lt;= x"7";
		when 8 =&gt; unit &lt;= x"8";
		when 9 =&gt; unit &lt;= x"9";
		when others =&gt; unit &lt;=x"f";
		end case;
	end process;
	process(z)
	begin
		case z is
		when 0 =&gt; Decimal &lt;= x"0";
		when 1 =&gt; Decimal &lt;= x"1";
		when 2 =&gt; Decimal &lt;= x"2";
		when 3 =&gt; Decimal &lt;= x"3";
		when 4 =&gt; Decimal &lt;= x"4";
		when 5 =&gt; Decimal &lt;= x"5";
		when 6 =&gt; Decimal &lt;= x"6";
		when 7 =&gt; Decimal &lt;= x"7";
		when 8 =&gt; Decimal &lt;= x"8";
		when 9 =&gt; Decimal &lt;= x"9";
		when others =&gt; Decimal &lt;=x"f";
		end case;
	end process;
&#13;
&#13;
END TypeArchitecture;&#13;
</vhdl>
  <vhdl name="Poarta_sau">--------------------------------------------------------------------------------&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY Poarta_sau IS&#13;
  PORT (&#13;
	in1, in2 : in std_logic;
	out_sau : out std_logic
    );&#13;
END Poarta_sau;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE TypeArchitecture OF Poarta_sau IS&#13;

BEGIN&#13;
&#13;
out_sau &lt;= in2 OR in1;&#13;

END TypeArchitecture;&#13;
</vhdl>
  <vhdl name="num_secunde">--------------------------------------------------------------------------------&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
USE ieee.numeric_std.all;&#13;

ENTITY num_secunde IS&#13;
  PORT (&#13;
  		clk: in std_logic;
        	reset: in std_logic;
        	enable: out std_logic;
        	out_60: out std_logic_vector(5 downto 0)
    );&#13;
END num_secunde;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE TypeArchitecture OF num_secunde IS&#13;
&#13;
SIGNAL count : STD_LOGIC_VECTOR(5 DOWNTO 0) := (OTHERS =&gt; '0');
signal en_aux : std_logic := '0';

BEGIN&#13;
&#13;
process (clk, reset)
    	begin

 		if reset = '1' then
         		count &lt;= "000000";
      		en_aux &lt;= '0';
        	
        	elsif rising_edge(clk) then
          	if count = "111011" then
               	 count &lt;= "000000";
               	 en_aux &lt;= '1';
               	 
            	else
               	 count &lt;= std_logic_vector(unsigned(count) + 1);
               	 en_aux &lt;= '0';
            	end if;
        	end if;
    end process;

enable &lt;= en_aux;
out_60 &lt;= count;
&#13;
END TypeArchitecture;&#13;
</vhdl>
  <vhdl name="si_2">--------------------------------------------------------------------------------&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY si_2 IS&#13;
  PORT (&#13;
  	in1, in2 : in std_logic;
  	out2 : out std_logic
    );&#13;
END si_2;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE TypeArchitecture OF si_2 IS&#13;
&#13;
BEGIN&#13;
&#13;
out2 &lt;= in1 AND in2;&#13;

END TypeArchitecture;&#13;
</vhdl>
  <vhdl name="poarta_nu">--------------------------------------------------------------------------------&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY poarta_nu IS&#13;
  PORT (&#13;
  	a : in std_logic;
  	b : out std_logic
    );&#13;
END poarta_nu;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE TypeArchitecture OF poarta_nu IS&#13;
&#13;
BEGIN&#13;
&#13;
b &lt;= NOT a;&#13;

END TypeArchitecture;&#13;
</vhdl>
  <vhdl name="Mux_2_la_1_5b">--------------------------------------------------------------------------------&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY Mux_2_la_1_5b IS&#13;
  PORT (&#13;
  		in1, in2 : in std_logic_vector(4 downto 0);
  		sel : in std_logic;
  		out5 : out std_logic_vector(4 downto 0)
    );&#13;
END Mux_2_la_1_5b;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE TypeArchitecture OF Mux_2_la_1_5b IS&#13;
&#13;
BEGIN&#13;
&#13;
out5 &lt;= in1 WHEN sel = '1' ELSE in2;

END TypeArchitecture;&#13;
</vhdl>
  <vhdl name="Mux_2_la_1_6b">--------------------------------------------------------------------------------&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY Mux_2_la_1_6b IS&#13;
  PORT (&#13;
 		in1, in2 : in std_logic_vector(5 downto 0);
  		sel : in std_logic;
  		out6 : out std_logic_vector(5 downto 0)
    );&#13;
END Mux_2_la_1_6b;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE TypeArchitecture OF Mux_2_la_1_6b IS&#13;
&#13;
BEGIN&#13;
&#13;
out6 &lt;= in1 WHEN sel = '1' ELSE in2;
&#13;

END TypeArchitecture;&#13;
</vhdl>
</project>
